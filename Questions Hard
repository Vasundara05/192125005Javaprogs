Hard


Write a Java Program to Convert a Given Number of Days in Terms of Years, Weeks & Days.
Sample Input&Output::
Enter the number of days: 756
No. of years: 2
No. of weeks: 3
No. of days: 5
Test cases:
38
3.6
0
-365
-45
Given a date, return the corresponding day of the week for that date.
The input is given as three integers representing the day, month and year respectively.
Return the answer as one of the following values {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"}.
 Example 1:
Input: day = 31, month = 8, year = 2019
Output: "Saturday"
Example 2:
Input: day = 18, month = 7, year = 1999
Output: "Sunday"
Example 3:
Input: day = 15, month = 8, year = 1993
Output: "Sunday"
 Constraints:
The given dates are valid dates between the years 1971 and 2100.

Write a program to find the number of student users in the college, get the total users, staff users details from the client. Note for every 3 staff user there is one Non teaching staff user assigned by default. 
Sample Input:
Total Users: 856
Staff Users: 126
Sample Output:
Student Users: 688
Test Cases:
Total User: 0
Total User: -143
Total User: 1026, Staff User: 1026
Total User: 450, Staff User: 540
Total User: 600, Staff User: 450



Write a program to print number of factors and to print nth factor of the given number.
Sample Input:
Given Number: 100
N = 4
Sample Output:
Number of factors = 9
4th factor of 100 = 5
Test Cases:
Given Number = 512 , N = 6
Given Number = 343 , N = 7
Given Number = 1024 , N = 0
Given Number = -6561 , N = 3
Given Number = 0 , N = 2

Write a program to print n prime numbers after nth Prime number
Sample Input:
N = 3
Sample Output:
3rd  Prime number is 5
3 prime numbers after 5 are: 7, 11, 13
Test cases:
N = P
N = 0
N = -4
N = 11
N = 7.2

Write a Program to create a list of all numbers in a range which are perfect squares and the sum of the digits of the number is less than 10.
Sample Input & Output:
Enter lower range: 1
Enter upper range: 40
[1, 4, 9, 16, 25, 36] 	
Test case:
Enter lower range: 50
Enter upper range: 100
Enter lower range: 5
Enter upper range: 8
Enter lower range: 10
Enter upper range: 5
Enter lower range: 500
Enter upper range: 500
Enter lower range: 0
Enter upper range: -100


Write a program to print unique permutations of a given number
Sample Input:
Given Number: 143
Sample Output:
Permutations are:
134
143
314
341
413
431
Test cases:
0
111
505
-143
-598

Write a Program to create an array with the First Element as the Number and Second Element as the Square of the Number.
Sample Input:
Enter the lower range:45
Enter the upper range:49
Sample Output:
[(45, 2025), (46, 2116), (47, 2209), (48, 2304), (49, 2401)]
Test case:
Enter lower range: 50
Enter upper range: 100
Enter lower range: 5
Enter upper range: 8
Enter lower range: 10
Enter upper range: 5
Enter lower range: 500
Enter upper range: 500
Enter lower range: 0
Enter upper range: -100

Develop a JAVA code to display the balance. Include the following members:       
Design a class to represent a bank account.
Data  Members: Name of the depositor, Account number, Type of account(Savings/Current), Balance amount in the account(Minimum balance is Rs.500.00)               
Methods: 
To read account number, Depositor name, Type of account.
To deposit an amount (Deposited amount should be added with it) 
To withdraw an amount after checking balance(Minimum balance must be Rs.500.00
Note : Assume that balance amount = 10000
Test Cases
100, Raja, S, 8000
Raja, 100, S, 9000
101, Rani, S, 12000
102, Ragu, W, 8000
103, Ravi, C, 10000

Develop a code to Reverse and Add a Number until you get a Palindrome.
Sample Input If 7325 is input number, then
7325 (Input Number) + 5237 (Reverse Of Input Number) = 12562
12562 + 26521 = 39083
39083 + 38093 = 77176
77176 + 67177 = 144353
144353 + 353441 = 497794 (Palindrome)  
Test Cases
8765
-8765
0
EIGHT FIVE
87.57

Create Customer class with deposit() and withdraw() as synchronized methods. Declare AccountNo, AccName and Balance as Instance Variables inside the class. From the main class, Input the amount for withdraw() operation and if requested amount is not available in existing Balance amount, withdraw() method should be temporarily suspended using wait() method until deposit() method receives the input for amount, to be added in the existing Balance amount and then withdraw() would be completed in a successful manner. Develop the above scenario using Synchronization and Inter-Thread Communication.
Note : existing Bank balance amount 10000
Sample Input : 12000, 3000
Sample Output : Withdraw operation success, balance amount 1000

Test Cases
11000, 4000
-10000, -2000
0, 0
EIGHT SEVEN, FIVE
100.67, 200.68

Given an integer n, return a string array answer (1-indexed) where:
answer[i] == "FizzBuzz" if i is divisible by 3 and 5.
answer[i] == "Fizz" if i is divisible by 3.
answer[i] == "Buzz" if i is divisible by 5.
answer[i] == i (as a string) if none of the above conditions are true.

Example 1:
Input: n = 3
Output: ["1","2","Fizz"]

Test Case
Test Case
Inputs


n = 5


n = 10


n = 12


n = 18


n = 20


Write a Java program to find the common elements in two array of Positive integer
Sample Input:
[1, 2, 3, 4]
[2, 4, 5, 6, 7]
Expected output: [2, 4]
Test Case
Test Case
Inputs-1
Inputs-2


[1, 2, 3, 4]
[4,5,6,7,8]


[a, b, c, d]
[a, b, c, d]


[1, -2, 3, 4]
[1,-2,5,7,8]


[@, #, 34, 45]
[@,#,%,$,]


[45,78,56,89]
[92,34,56,-78,-90]


Given a string s consisting of words and spaces, return the length of the last word in the string. A word is a maximal substring consisting of non-space characters only. There will be at least one word, consists of only English letters and spaces ' '. 
Example 1:
Input: s = "Hello World"
Output: 5
Explanation: The last word is "World" with length 5.

Test Case
Test Case
Inputs-1


Maximal Substring Consisting


lea@st one wor2d


1254  98076


& * (  ) % # $


letters and spaces



Write a program to read a character until a * is encountered. Also count the number of uppercase, lowercase, and numbers entered by the users.
Sample Input:
Enter * to exit…
Enter any character: W
Enter any character: d
Enter any character: A
Enter any character: G
Enter any character: g
Enter any character: H
Enter any character: *
Sample Output:
Total count of lower case:2
Total count of upper case:4
Total count of numbers =0

Test Case
Test Case
Inputs-1


1,7,6,9,5


S, Q, l, K,7, j, M


M, j, L, &, @, G


D, K, I, 6, L, *


*, K, A, e, 1, 8, %, *


Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.
SymbolValue
I             1
V             5
X             10
L             50
C             100
D             500
M             1000
For example, 2 is written as II in Roman numeral, just two ones added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.
Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:
I can be placed before V (5) and X (10) to make 4 and 9. 
X can be placed before L (50) and C (100) to make 40 and 90. 
C can be placed before D (500) and M (1000) to make 400 and 900.
Given a roman numeral, convert it to an integer.
 

Example:
Input: s = "III"
Output: 3
Test Case
Inputs


LVIII


MCMXCI


V


LZAII


MCCDTIV









Given two strings ransomNote and magazine, return true if ransomNote can be constructed by using the letters from magazine and false otherwise. Each letter in magazine can only be used once in ransomNote.

Example 1:
Input: ransomNote = "a", magazine = "b"
Output: false

Test Case
Test Case
Inputs


ransomNote = "aa", magazine = "ab"


ransomNote = "aa", magazine = "aab"


ransomNote = "abc", magazine = "abc"


ransomNote = "good", magazine = "better"


ransomNote = "xyz", magazine = "123"



You are given an m x n binary matrix mat of 1's (representing soldiers) and 0's (representing civilians). The soldiers are positioned in front of the civilians. That is, all the 1's will appear to the left of all the 0's in each row.
A row i is weaker than a row j if one of the following is true:
The number of soldiers in row i is less than the number of soldiers in row j.
Both rows have the same number of soldiers and i< j. Return the indices of the k weakest rows in the matrix ordered from weakest to strongest.

Example 1:
Input: mat = 
[[1,1,0,0,0],
 [1,1,1,1,0],
 [1,0,0,0,0],
 [1,1,0,0,0],
 [1,1,1,1,1]], 
k = 3
Output: [2,0,3]
Explanation: 
The number of soldiers in each row is: 
- Row 0: 2 
- Row 1: 4 
- Row 2: 1 
- Row 3: 2 
- Row 4: 5 
The rows ordered from weakest to strongest are [2,0,3,1,4].

Example 2:
Input: mat = 
[[1, 0, 0, 0],
 [1, 1, 1,1],
 [1, 0, 0, 0],
 [1, 0, 0,0]], 
k = 2
Output: [0,2]
Explanation: 
The number of soldiers in each row is: 
- Row 0: 1 
- Row 1: 4 
- Row 2: 1 
- Row 3: 1 
The rows ordered from weakest to strongest are [0, 2, 3, 1].

Given an integer num, return the number of steps to reduce it to zero. In one step, if the current number is even, you have to divide it by 2, otherwise, you have to subtract 1 from it.

Example 1:
Input: num = 14
Output: 6
Explanation: 
Step 1) 14 is even; divide by 2 and obtain 7. 
Step 2) 7 is odd; subtract 1 and obtain 6.
Step 3) 6 is even; divide by 2 and obtain 3. 
Step 4) 3 is odd; subtract 1 and obtain 2. 
Step 5) 2 is even; divide by 2 and obtain 1. 
Step 6) 1 is odd; subtract 1 and obtain 0.

Test Case
Test Case
Inputs


n = 5


n = 10


n = 12


n = 18


n = 20



Develop a programme that uses Multiple Inheritance concepts to compute a student's grades in six subjects. The total and aggregate are then calculated, and the student's grade is displayed. If the student achieves an aggregate of more than 75%, the grade is Distinction. If the aggregate is between 60 and 75, the grade is First Division. If the aggregate is between 50 and 60, the grade is Second Division. If the aggregate is between 40 and 50, the grade is Third Division. Otherwise, the grade is FAIL.
Sample Input & Output:
Enter the marks in python: 90
Enter the marks in c programming: 91
Enter the marks in Mathematics: 92
Enter the marks in Physics: 93
Enter the marks in Chemistry: 92
Enter the marks in Professional Ethics: 93
Total= 551
Aggregate = 91.83
Class: DISTINCTION

Test Case
Test Case
Inputs


18, 76,93,65,63,98


73,78,79,75,87,0


98,106,120,95,98,34


96,73, -85,95,84,98


78,59.8,76,79,97,67


Write a program to calculate tax given the following conditions:
If income is less than or equal to 2,50,000 then no tax
If taxable income is 2,50,001 – 5,00,000 the charge 10% tax
If taxable income is 5,00,001 – 10,00,000 the charge 20% tax
If taxable income is above 10,00,001 then charge 30% tax
Sample Input:
Enter the income: 600000
Sample Output:
Taxable Income: 350000
Tax= 35000
Test Case
Test Case
Inputs


400700


2789239


150000


00000


-125486

